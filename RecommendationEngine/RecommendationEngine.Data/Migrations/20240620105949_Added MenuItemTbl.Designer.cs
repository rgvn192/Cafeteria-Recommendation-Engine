// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecommendationEngine.Data;

#nullable disable

namespace RecommendationEngine.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240620105949_Added MenuItemTbl")]
    partial class AddedMenuItemTbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RecommendationEngine.Data.Entities.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"), 1L, 1);

                    b.Property<string>("Comments")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("CreatedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MenuItemCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UserLikeability")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuItemCategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MenuItems", (string)null);

                    b.HasData(
                        new
                        {
                            MenuItemId = 1,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 1,
                            Name = "Poha",
                            Price = 40.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 2,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 1,
                            Name = "Upma",
                            Price = 40.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 3,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 1,
                            Name = "Fried Idli",
                            Price = 40.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 4,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 2,
                            Name = "Moong Daal",
                            Price = 40.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 5,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 2,
                            Name = "Paneer lababdar",
                            Price = 40.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 6,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 2,
                            Name = "Vegetable Biryani",
                            Price = 100.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 7,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 2,
                            Name = "Palak Paneer",
                            Price = 90.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 8,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 2,
                            Name = "Mix Veg",
                            Price = 90.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 9,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 3,
                            Name = "Naan",
                            Price = 15.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 10,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 3,
                            Name = "Roti",
                            Price = 10.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 12,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 3,
                            Name = "Paratha",
                            Price = 20.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 13,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 4,
                            Name = "Masala Chai",
                            Price = 15.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 14,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 4,
                            Name = "Mango Lassi",
                            Price = 25.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 15,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 5,
                            Name = "Cucumber Raita",
                            Price = 20.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 16,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 5,
                            Name = "Mixed Vegetable Salad",
                            Price = 30.00m,
                            UserLikeability = 0m
                        },
                        new
                        {
                            MenuItemId = 17,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAvailable = false,
                            MenuItemCategoryId = 5,
                            Name = "Steamed Basmati Rice",
                            Price = 25.00m,
                            UserLikeability = 0m
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.MenuItemCategory", b =>
                {
                    b.Property<int>("MenuItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemCategoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("ModifiedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MenuItemCategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MenuItemCategorys", (string)null);

                    b.HasData(
                        new
                        {
                            MenuItemCategoryId = 1,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Snack"
                        },
                        new
                        {
                            MenuItemCategoryId = 2,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Main Course"
                        },
                        new
                        {
                            MenuItemCategoryId = 3,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Breads"
                        },
                        new
                        {
                            MenuItemCategoryId = 4,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Beverages"
                        },
                        new
                        {
                            MenuItemCategoryId = 5,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Side Dish"
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<DateTime>("CreatedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("ModifiedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            CreatedDatetime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chef"
                        });
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("CreatedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("LastSeenNotificationAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.MenuItem", b =>
                {
                    b.HasOne("RecommendationEngine.Data.Entities.MenuItemCategory", "MenuItemCategory")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuItemCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItemCategory");
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.User", b =>
                {
                    b.HasOne("RecommendationEngine.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.MenuItemCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("RecommendationEngine.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
